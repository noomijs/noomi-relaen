"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionFactory = void 0;
const relaenmanager_1 = require("./relaenmanager");
const threadlocal_1 = require("./threadlocal");
/**
 * 事务类型工厂
 */
class TransactionFactory {
    /**
     * 添加事务类
     * @param name -    dialect 名
     * @param value -   transaction 类
     */
    static addClass(name, value) {
        this.classMap.set(name, value);
    }
    /**
     * 获取事务类
     * @param conn -    连接对象，如果不设置，当不存在事务对象时，则不进行新建
     * @returns         事务对象
     */
    static get(conn) {
        const id = threadlocal_1.RelaenThreadLocal.getThreadId();
        if (this.transactions.has(id)) {
            return this.transactions.get(id);
        }
        if (conn) {
            //新建tx对象
            const cls = this.classMap.get(relaenmanager_1.RelaenManager.dialect);
            if (cls) {
                const tx = Reflect.construct(cls, [conn]);
                this.transactions.set(tx.threadId, tx);
                return tx;
            }
        }
    }
    /**
     * 删除事务
     * @param threadId -  thread id，默认为当前thread id
     */
    static remove(threadId) {
        threadId || (threadId = threadlocal_1.RelaenThreadLocal.getThreadId());
        this.transactions.delete(threadId);
    }
}
exports.TransactionFactory = TransactionFactory;
/**
 * 事务类型集合
 */
TransactionFactory.transactions = new Map();
/**
 * 事务map集合
 */
TransactionFactory.classMap = new Map();
//# sourceMappingURL=transactionfactory.js.map