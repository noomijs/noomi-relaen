"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OracleTransaction = void 0;
const connectionmanager_1 = require("../../connectionmanager");
const error_1 = require("../../message/error");
const logger_1 = require("../../logger");
const transaction_1 = require("../../transaction");
/**
 * oracle 事务类
 */
class OracleTransaction extends transaction_1.Transaction {
    /**
     * 设置当前事务
     * @param isolation - 事务隔离级
     */
    async setIsolationLevel(isolationLevel) {
        // Oracle only supports SERIALIZABLE and READ COMMITTED isolation
        if (isolationLevel === 'SERIALIZABLE' || isolationLevel === 'READ COMMITTED') {
            const sql = "SET TRANSACTION ISOLATION LEVEL " + isolationLevel;
            await connectionmanager_1.ConnectionManager.provider.exec(this.conn, sql);
            logger_1.Logger.log(sql);
        }
        else if (isolationLevel === 'READ UNCOMMITTED' || isolationLevel === 'REPEATABLE READ') {
            throw new error_1.RelaenError('0407');
        }
    }
    /**
     * 开始事务
     */
    async begin() {
        this.conn.autoCommit = false;
        super.begin();
    }
    /**
     * 事务提交
     */
    async commit() {
        try {
            await this.conn.conn.commit();
            this.conn.autoCommit = true;
            super.commit();
        }
        catch (err) {
            throw err;
        }
    }
    /**
     * 事务回滚
     */
    async rollback() {
        try {
            await this.conn.conn.rollback();
            this.conn.autoCommit = true;
            super.rollback();
        }
        catch (err) {
            throw err;
        }
    }
}
exports.OracleTransaction = OracleTransaction;
//# sourceMappingURL=oracletransaction.js.map